import java.time.LocalDateTime

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.spring.backend'
version = '0.0.1-SNAPSHOT'
bootJar.enabled = true
jar.enabled = true

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "2021.0.5")
}

String springProfileActive = System.properties['spring.profiles.active']
println "spring.profiles.active is $springProfileActive"

bootRun {
	systemProperty("spring.profiles.active", springProfileActive)
}

String buildDateTime = LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern("yyyyMMddHHmmss"))
String jarFileName = "spring-web.backend-${buildDateTime}.jar"

bootJar {
	mainClass = 'com.spring.backend.SpringBackendApplication'
	archiveFileName = "${jarFileName}"
}

jar {
	archiveFileName = "${jarFileName}"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	implementation 'org.codehaus.janino:janino:3.1.9'
	implementation 'com.oracle.database.jdbc:ojdbc8:19.3.0.0'
	implementation 'org.postgresql:postgresql:42.5.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.0'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

sourceSets {
	main {
		resources {
			java.srcDirs("src/main/java")
			srcDirs("src/main/resources", "src/main/resources/logback/logback-${springProfileActive}")
		}
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

tasks.processResources {
	duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
}
